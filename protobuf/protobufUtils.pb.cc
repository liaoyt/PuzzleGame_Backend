// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protobufUtils.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "protobufUtils.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace protobufUtils {

namespace {

const ::google::protobuf::Descriptor* PGRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PGRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* PGRequest_RankInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PGRequest_RankInfo_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_protobufUtils_2eproto() {
  protobuf_AddDesc_protobufUtils_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "protobufUtils.proto");
  GOOGLE_CHECK(file != NULL);
  PGRequest_descriptor_ = file->message_type(0);
  static const int PGRequest_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PGRequest, code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PGRequest, errorinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PGRequest, username_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PGRequest, password_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PGRequest, score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PGRequest, picture_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PGRequest, rankinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PGRequest, piclist_),
  };
  PGRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PGRequest_descriptor_,
      PGRequest::default_instance_,
      PGRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PGRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PGRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PGRequest));
  PGRequest_RankInfo_descriptor_ = PGRequest_descriptor_->nested_type(0);
  static const int PGRequest_RankInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PGRequest_RankInfo, myrank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PGRequest_RankInfo, username_),
  };
  PGRequest_RankInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PGRequest_RankInfo_descriptor_,
      PGRequest_RankInfo::default_instance_,
      PGRequest_RankInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PGRequest_RankInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PGRequest_RankInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PGRequest_RankInfo));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_protobufUtils_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PGRequest_descriptor_, &PGRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PGRequest_RankInfo_descriptor_, &PGRequest_RankInfo::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_protobufUtils_2eproto() {
  delete PGRequest::default_instance_;
  delete PGRequest_reflection_;
  delete PGRequest_RankInfo::default_instance_;
  delete PGRequest_RankInfo_reflection_;
}

void protobuf_AddDesc_protobufUtils_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023protobufUtils.proto\022\rprotobufUtils\"\344\001\n"
    "\tPGRequest\022\014\n\004Code\030\001 \002(\005\022\021\n\terrorInfo\030\002 "
    "\001(\t\022\020\n\010username\030\003 \001(\t\022\020\n\010password\030\004 \001(\t\022"
    "\r\n\005score\030\005 \001(\t\022\017\n\007picture\030\006 \001(\t\0223\n\010rankI"
    "nfo\030\007 \001(\0132!.protobufUtils.PGRequest.Rank"
    "Info\022\017\n\007picList\030\010 \003(\t\032,\n\010RankInfo\022\016\n\006myR"
    "ank\030\001 \002(\005\022\020\n\010username\030\002 \003(\t", 267);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "protobufUtils.proto", &protobuf_RegisterTypes);
  PGRequest::default_instance_ = new PGRequest();
  PGRequest_RankInfo::default_instance_ = new PGRequest_RankInfo();
  PGRequest::default_instance_->InitAsDefaultInstance();
  PGRequest_RankInfo::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_protobufUtils_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_protobufUtils_2eproto {
  StaticDescriptorInitializer_protobufUtils_2eproto() {
    protobuf_AddDesc_protobufUtils_2eproto();
  }
} static_descriptor_initializer_protobufUtils_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int PGRequest_RankInfo::kMyRankFieldNumber;
const int PGRequest_RankInfo::kUsernameFieldNumber;
#endif  // !_MSC_VER

PGRequest_RankInfo::PGRequest_RankInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobufUtils.PGRequest.RankInfo)
}

void PGRequest_RankInfo::InitAsDefaultInstance() {
}

PGRequest_RankInfo::PGRequest_RankInfo(const PGRequest_RankInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobufUtils.PGRequest.RankInfo)
}

void PGRequest_RankInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  myrank_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PGRequest_RankInfo::~PGRequest_RankInfo() {
  // @@protoc_insertion_point(destructor:protobufUtils.PGRequest.RankInfo)
  SharedDtor();
}

void PGRequest_RankInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PGRequest_RankInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PGRequest_RankInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PGRequest_RankInfo_descriptor_;
}

const PGRequest_RankInfo& PGRequest_RankInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protobufUtils_2eproto();
  return *default_instance_;
}

PGRequest_RankInfo* PGRequest_RankInfo::default_instance_ = NULL;

PGRequest_RankInfo* PGRequest_RankInfo::New() const {
  return new PGRequest_RankInfo;
}

void PGRequest_RankInfo::Clear() {
  myrank_ = 0;
  username_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PGRequest_RankInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobufUtils.PGRequest.RankInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 myRank = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &myrank_)));
          set_has_myrank();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_username;
        break;
      }

      // repeated string username = 2;
      case 2: {
        if (tag == 18) {
         parse_username:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->username(this->username_size() - 1).data(),
            this->username(this->username_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "username");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_username;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobufUtils.PGRequest.RankInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobufUtils.PGRequest.RankInfo)
  return false;
#undef DO_
}

void PGRequest_RankInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobufUtils.PGRequest.RankInfo)
  // required int32 myRank = 1;
  if (has_myrank()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->myrank(), output);
  }

  // repeated string username = 2;
  for (int i = 0; i < this->username_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->username(i).data(), this->username(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "username");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->username(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobufUtils.PGRequest.RankInfo)
}

::google::protobuf::uint8* PGRequest_RankInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobufUtils.PGRequest.RankInfo)
  // required int32 myRank = 1;
  if (has_myrank()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->myrank(), target);
  }

  // repeated string username = 2;
  for (int i = 0; i < this->username_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username(i).data(), this->username(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "username");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->username(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobufUtils.PGRequest.RankInfo)
  return target;
}

int PGRequest_RankInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 myRank = 1;
    if (has_myrank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->myrank());
    }

  }
  // repeated string username = 2;
  total_size += 1 * this->username_size();
  for (int i = 0; i < this->username_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->username(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PGRequest_RankInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PGRequest_RankInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PGRequest_RankInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PGRequest_RankInfo::MergeFrom(const PGRequest_RankInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  username_.MergeFrom(from.username_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_myrank()) {
      set_myrank(from.myrank());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PGRequest_RankInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PGRequest_RankInfo::CopyFrom(const PGRequest_RankInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PGRequest_RankInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PGRequest_RankInfo::Swap(PGRequest_RankInfo* other) {
  if (other != this) {
    std::swap(myrank_, other->myrank_);
    username_.Swap(&other->username_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PGRequest_RankInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PGRequest_RankInfo_descriptor_;
  metadata.reflection = PGRequest_RankInfo_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int PGRequest::kCodeFieldNumber;
const int PGRequest::kErrorInfoFieldNumber;
const int PGRequest::kUsernameFieldNumber;
const int PGRequest::kPasswordFieldNumber;
const int PGRequest::kScoreFieldNumber;
const int PGRequest::kPictureFieldNumber;
const int PGRequest::kRankInfoFieldNumber;
const int PGRequest::kPicListFieldNumber;
#endif  // !_MSC_VER

PGRequest::PGRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobufUtils.PGRequest)
}

void PGRequest::InitAsDefaultInstance() {
  rankinfo_ = const_cast< ::protobufUtils::PGRequest_RankInfo*>(&::protobufUtils::PGRequest_RankInfo::default_instance());
}

PGRequest::PGRequest(const PGRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobufUtils.PGRequest)
}

void PGRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  code_ = 0;
  errorinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  score_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  picture_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rankinfo_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PGRequest::~PGRequest() {
  // @@protoc_insertion_point(destructor:protobufUtils.PGRequest)
  SharedDtor();
}

void PGRequest::SharedDtor() {
  if (errorinfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete errorinfo_;
  }
  if (username_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete username_;
  }
  if (password_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete password_;
  }
  if (score_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete score_;
  }
  if (picture_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete picture_;
  }
  if (this != default_instance_) {
    delete rankinfo_;
  }
}

void PGRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PGRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PGRequest_descriptor_;
}

const PGRequest& PGRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protobufUtils_2eproto();
  return *default_instance_;
}

PGRequest* PGRequest::default_instance_ = NULL;

PGRequest* PGRequest::New() const {
  return new PGRequest;
}

void PGRequest::Clear() {
  if (_has_bits_[0 / 32] & 127) {
    code_ = 0;
    if (has_errorinfo()) {
      if (errorinfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        errorinfo_->clear();
      }
    }
    if (has_username()) {
      if (username_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        username_->clear();
      }
    }
    if (has_password()) {
      if (password_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        password_->clear();
      }
    }
    if (has_score()) {
      if (score_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        score_->clear();
      }
    }
    if (has_picture()) {
      if (picture_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        picture_->clear();
      }
    }
    if (has_rankinfo()) {
      if (rankinfo_ != NULL) rankinfo_->::protobufUtils::PGRequest_RankInfo::Clear();
    }
  }
  piclist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PGRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobufUtils.PGRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 Code = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
          set_has_code();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_errorInfo;
        break;
      }

      // optional string errorInfo = 2;
      case 2: {
        if (tag == 18) {
         parse_errorInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errorinfo()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->errorinfo().data(), this->errorinfo().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "errorinfo");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_username;
        break;
      }

      // optional string username = 3;
      case 3: {
        if (tag == 26) {
         parse_username:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "username");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_password;
        break;
      }

      // optional string password = 4;
      case 4: {
        if (tag == 34) {
         parse_password:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "password");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_score;
        break;
      }

      // optional string score = 5;
      case 5: {
        if (tag == 42) {
         parse_score:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_score()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->score().data(), this->score().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "score");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_picture;
        break;
      }

      // optional string picture = 6;
      case 6: {
        if (tag == 50) {
         parse_picture:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_picture()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->picture().data(), this->picture().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "picture");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_rankInfo;
        break;
      }

      // optional .protobufUtils.PGRequest.RankInfo rankInfo = 7;
      case 7: {
        if (tag == 58) {
         parse_rankInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rankinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_picList;
        break;
      }

      // repeated string picList = 8;
      case 8: {
        if (tag == 66) {
         parse_picList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_piclist()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->piclist(this->piclist_size() - 1).data(),
            this->piclist(this->piclist_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "piclist");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_picList;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobufUtils.PGRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobufUtils.PGRequest)
  return false;
#undef DO_
}

void PGRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobufUtils.PGRequest)
  // required int32 Code = 1;
  if (has_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // optional string errorInfo = 2;
  if (has_errorinfo()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->errorinfo().data(), this->errorinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "errorinfo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->errorinfo(), output);
  }

  // optional string username = 3;
  if (has_username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->username(), output);
  }

  // optional string password = 4;
  if (has_password()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->password(), output);
  }

  // optional string score = 5;
  if (has_score()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->score().data(), this->score().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "score");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->score(), output);
  }

  // optional string picture = 6;
  if (has_picture()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->picture().data(), this->picture().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "picture");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->picture(), output);
  }

  // optional .protobufUtils.PGRequest.RankInfo rankInfo = 7;
  if (has_rankinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->rankinfo(), output);
  }

  // repeated string picList = 8;
  for (int i = 0; i < this->piclist_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->piclist(i).data(), this->piclist(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "piclist");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->piclist(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobufUtils.PGRequest)
}

::google::protobuf::uint8* PGRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobufUtils.PGRequest)
  // required int32 Code = 1;
  if (has_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // optional string errorInfo = 2;
  if (has_errorinfo()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->errorinfo().data(), this->errorinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "errorinfo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->errorinfo(), target);
  }

  // optional string username = 3;
  if (has_username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->username(), target);
  }

  // optional string password = 4;
  if (has_password()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->password(), target);
  }

  // optional string score = 5;
  if (has_score()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->score().data(), this->score().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "score");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->score(), target);
  }

  // optional string picture = 6;
  if (has_picture()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->picture().data(), this->picture().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "picture");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->picture(), target);
  }

  // optional .protobufUtils.PGRequest.RankInfo rankInfo = 7;
  if (has_rankinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->rankinfo(), target);
  }

  // repeated string picList = 8;
  for (int i = 0; i < this->piclist_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->piclist(i).data(), this->piclist(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "piclist");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(8, this->piclist(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobufUtils.PGRequest)
  return target;
}

int PGRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 Code = 1;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->code());
    }

    // optional string errorInfo = 2;
    if (has_errorinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->errorinfo());
    }

    // optional string username = 3;
    if (has_username()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->username());
    }

    // optional string password = 4;
    if (has_password()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->password());
    }

    // optional string score = 5;
    if (has_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->score());
    }

    // optional string picture = 6;
    if (has_picture()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->picture());
    }

    // optional .protobufUtils.PGRequest.RankInfo rankInfo = 7;
    if (has_rankinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->rankinfo());
    }

  }
  // repeated string picList = 8;
  total_size += 1 * this->piclist_size();
  for (int i = 0; i < this->piclist_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->piclist(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PGRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PGRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PGRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PGRequest::MergeFrom(const PGRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  piclist_.MergeFrom(from.piclist_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_code()) {
      set_code(from.code());
    }
    if (from.has_errorinfo()) {
      set_errorinfo(from.errorinfo());
    }
    if (from.has_username()) {
      set_username(from.username());
    }
    if (from.has_password()) {
      set_password(from.password());
    }
    if (from.has_score()) {
      set_score(from.score());
    }
    if (from.has_picture()) {
      set_picture(from.picture());
    }
    if (from.has_rankinfo()) {
      mutable_rankinfo()->::protobufUtils::PGRequest_RankInfo::MergeFrom(from.rankinfo());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PGRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PGRequest::CopyFrom(const PGRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PGRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_rankinfo()) {
    if (!this->rankinfo().IsInitialized()) return false;
  }
  return true;
}

void PGRequest::Swap(PGRequest* other) {
  if (other != this) {
    std::swap(code_, other->code_);
    std::swap(errorinfo_, other->errorinfo_);
    std::swap(username_, other->username_);
    std::swap(password_, other->password_);
    std::swap(score_, other->score_);
    std::swap(picture_, other->picture_);
    std::swap(rankinfo_, other->rankinfo_);
    piclist_.Swap(&other->piclist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PGRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PGRequest_descriptor_;
  metadata.reflection = PGRequest_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace protobufUtils

// @@protoc_insertion_point(global_scope)
